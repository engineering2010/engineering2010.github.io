---
layout: splash
title:  "Use t-SNE matrice to analyze dataset"
header:
  image: /assets/images/unsplash-image-2.jpg
date:   2024-04-25
tags: 
  - ELEC4630
---
# Use t-SNE matrice

The steps for using t-SNE (t-Distributed Stochastic Neighbor Embedding) to reduce high-dimensional data and visualize it are as follows:

1. Extract features and labels from dataset
2. t-SNE dimensionality reduction
3. Visualization

This code extracts features and labels from the validation dataset. By iterating over `dls.valid`, it uses the model `learn.model` to predict each input `x`, generating a list of features (`features`), and retrieves the corresponding label `y`, creating a list of labels (`labels`). These features and labels can be used for further analysis, training, or data visualization.
```console
features = [learn.model(x) for x, _ in dls.valid]
labels = [y for _, y in dls.valid]
```

The following code primarily performs t-SNE (t-Distributed Stochastic Neighbor Embedding) dimensionality reduction and converts high-dimensional data into two dimensions.
```console
tsne = TSNE(n_components=2, random_state=42)
features_tsne = tsne.fit_transform(features)
```

The following code uses t-SNE to reduce high-dimensional data to two dimensions and creates a 2D scatter plot to visualize the distribution of different categories.
```console
plt.figure(figsize=(10, 8))
for i, className in enumerate(dls.vocab):    # dls.vocab contains all the classes and the corresponding index for each class.
    index = (labels == i)
    plt.scatter(features_tsne[index, 0], features_tsne[index, 1], label=className, alpha=0.7)
plt.title('t-SNE Plot of CIFAR-10 Classes')
plt.legend()
plt.show()
```

![Alt text](/assets/images/t-SNE-matrix.png)
